name: Deploy Next App
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
#    paths-ignore:
#      - '.github/workflows/*'
jobs:
  jest:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run jest test
        run: pnpm test:jest
  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [ 1/4, 2/4, 3/4, 4/4 ]
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
#          run_install: false
#      - name: Get pnpm store directory
#        shell: bash
#        run: |
#          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
#      - name: Setup pnpm cache
#        uses: actions/cache@v3
#        with:
#          path: ${{ env.STORE_PATH }}
#          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Get installed Playwright version
        shell: bash
        id: playwright-version
        run: |
          PACKAGE_VERSION=$(pnpm show @playwright/test version)
          echo "Playwright/Test version: $PACKAGE_VERSION"
#        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./pnpm-lock.yaml').devDependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Run jest test
        run: npx playwright test --reporter html --shard ${{ matrix.shard }}
      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run lint
        run: pnpm lint
  build:
    needs: [ jest, lint, e2e ]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run build
        run: pnpm build
      - name: Show
        run: ls -R
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          retention-days: 1
          if-no-files-found: error
          path: |
            package.json
            next.config.js
            .env*
            public
            .next
#            node_modules
